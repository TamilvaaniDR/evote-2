version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: evote-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: evote
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init.js:/docker-entrypoint-initdb.d/mongodb-init.js:ro
    networks:
      - evote-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./evote-backend
      dockerfile: Dockerfile
    container_name: evote-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGO_URI: mongodb://admin:password123@mongodb:27017/evote?authSource=admin
      JWT_ADMIN_SECRET: your-super-secret-jwt-key-change-in-production
      OTP_SECRET: your-otp-secret-key-change-in-production
      FRONTEND_URL: http://localhost:3000
    ports:
      - "4000:4000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - evote-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./evote-frontend
      dockerfile: Dockerfile
    container_name: evote-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:4000/api
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - evote-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local

networks:
  evote-network:
    driver: bridge





